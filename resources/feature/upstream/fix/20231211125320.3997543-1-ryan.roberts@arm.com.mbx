From git@z Thu Jan  1 00:00:00 1970
Received: from foss.arm.com (foss.arm.com [217.140.110.172])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 77A583B7BB
	for <oe-kbuild-all@lists.linux.dev>; Mon, 11 Dec 2023 12:53:35 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=arm.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=arm.com
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
	by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 0010AFEC;
	Mon, 11 Dec 2023 04:54:21 -0800 (PST)
Received: from e125769.cambridge.arm.com (e125769.cambridge.arm.com [10.1.196.26])
	by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id 934533F762;
	Mon, 11 Dec 2023 04:53:33 -0800 (PST)
From: Ryan Roberts <ryan.roberts@arm.com>
To: Andrew Morton <akpm@linux-foundation.org>
Cc: Ryan Roberts <ryan.roberts@arm.com>,
	kernel test robot <lkp@intel.com>,
	oe-kbuild-all@lists.linux.dev,
	Linux Memory Management List <linux-mm@kvack.org>,
	Barry Song <v-songbaohua@oppo.com>
Subject: [PATCH] mm: thp: Fix build warning when CONFIG_SYSFS is disabled
Date: Mon, 11 Dec 2023 12:53:20 +0000
Message-Id: <20231211125320.3997543-1-ryan.roberts@arm.com>
X-Mailer: git-send-email 2.25.1
In-Reply-To: <202312111916.YbsHxKPq-lkp@intel.com>
References: <202312111916.YbsHxKPq-lkp@intel.com>
Precedence: bulk
X-Mailing-List: oe-kbuild-all@lists.linux.dev
List-Id: <oe-kbuild-all.lists.linux.dev>
List-Subscribe: <mailto:oe-kbuild-all+subscribe@lists.linux.dev>
List-Unsubscribe: <mailto:oe-kbuild-all+unsubscribe@lists.linux.dev>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

huge_anon_orders_lock is used only to serialize sysfs writers. So move
its definition so that it is within the CONFIG_SYSFS ifdefery to
suppress "defined but not used" warning when sysfs is disabled.

Fixes: fe2c9313a8c0 ("mm: thp: Introduce multi-size THP sysfs interface")
Reported-by: kernel test robot <lkp@intel.com>
Closes: https://lore.kernel.org/oe-kbuild-all/202312111916.YbsHxKPq-lkp@intel.com/
Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
---

Hi Andrew,

David mentioned that your preference is to squash minor fixes into patches in
mm-unstable? Could you please squash this into commit fe2c9313a8c0 ("mm: thp:
Introduce multi-size THP sysfs interface")?

Thanks,
Ryan

 mm/huge_memory.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/mm/huge_memory.c b/mm/huge_memory.c
index cfb1d04a71b1..ddf73422d3b5 100644
--- a/mm/huge_memory.c
+++ b/mm/huge_memory.c
@@ -77,7 +77,6 @@ unsigned long huge_zero_pfn __read_mostly = ~0UL;
 unsigned long huge_anon_orders_always __read_mostly;
 unsigned long huge_anon_orders_madvise __read_mostly;
 unsigned long huge_anon_orders_inherit __read_mostly;
-static DEFINE_SPINLOCK(huge_anon_orders_lock);

 unsigned long __thp_vma_allowable_orders(struct vm_area_struct *vma,
 					 unsigned long vm_flags, bool smaps,
@@ -442,6 +441,7 @@ static const struct attribute_group hugepage_attr_group = {

 static void hugepage_exit_sysfs(struct kobject *hugepage_kobj);
 static void thpsize_release(struct kobject *kobj);
+static DEFINE_SPINLOCK(huge_anon_orders_lock);
 static LIST_HEAD(thpsize_list);

 struct thpsize {
--
2.25.1



From git@z Thu Jan  1 00:00:00 1970
Received: from mgamail.intel.com (mgamail.intel.com [192.198.163.8])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 0AE8A2AF13
	for <oe-kbuild-all@lists.linux.dev>; Mon, 11 Dec 2023 11:38:05 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="lpOhcCF6"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1702294686; x=1733830686;
  h=date:from:to:cc:subject:message-id:mime-version;
  bh=iT9lbf86UKRuGeq30DoGDxmozX7uY/4xhBirt2+pubU=;
  b=lpOhcCF6EmtmS8v0N3UhrCGRkcQR2w120CpTy34vr+Ug4B4Kf9tAV/dT
   h2ay0GnJoPxQe+AECS2h38H11nJVLaDu5sDAymvMBvzqDPbZWMojbfFch
   NJKaEc8s7g2sRq5ZIhdzaZwI4jRgqqR4x3qlCzmVM6OTiSgpYom4DmLPj
   YBvLGDWCWkXHVGABL+1Z3ipAGPiSVHFF8sf99z3vF9HUcXWFH1hn0KKyF
   ZecE5iCkx2BLb9aGuHwWbepoMdpDdlUprjLMxc2LLUW78dgHnZaaoqiXw
   h7jYXJinj7+cOS/Gq6TUu6139XYoMR9R47MNg5vooLBywmXBP8ncSJKUF
   w==;
X-IronPort-AV: E=McAfee;i="6600,9927,10920"; a="7986619"
X-IronPort-AV: E=Sophos;i="6.04,267,1695711600"; 
   d="scan'208";a="7986619"
Received: from fmsmga007.fm.intel.com ([10.253.24.52])
  by fmvoesa102.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 11 Dec 2023 03:38:05 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10920"; a="776640485"
X-IronPort-AV: E=Sophos;i="6.04,267,1695711600"; 
   d="scan'208";a="776640485"
Received: from lkp-server02.sh.intel.com (HELO b07ab15da5fe) ([10.239.97.151])
  by fmsmga007.fm.intel.com with ESMTP; 11 Dec 2023 03:38:03 -0800
Received: from kbuild by b07ab15da5fe with local (Exim 4.96)
	(envelope-from <lkp@intel.com>)
	id 1rCebp-000Hzc-01;
	Mon, 11 Dec 2023 11:38:01 +0000
Date: Mon, 11 Dec 2023 19:37:07 +0800
From: kernel test robot <lkp@intel.com>
To: Ryan Roberts <ryan.roberts@arm.com>
Cc: oe-kbuild-all@lists.linux.dev,
	Linux Memory Management List <linux-mm@kvack.org>,
	Andrew Morton <akpm@linux-foundation.org>,
	Barry Song <v-songbaohua@oppo.com>
Subject: [linux-next:master 6443/6992] mm/huge_memory.c:80:24: warning:
 'huge_anon_orders_lock' defined but not used
Message-ID: <202312111916.YbsHxKPq-lkp@intel.com>
Precedence: bulk
X-Mailing-List: oe-kbuild-all@lists.linux.dev
List-Id: <oe-kbuild-all.lists.linux.dev>
List-Subscribe: <mailto:oe-kbuild-all+subscribe@lists.linux.dev>
List-Unsubscribe: <mailto:oe-kbuild-all+unsubscribe@lists.linux.dev>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline

tree:   https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git master
head:   bbd220ce4e29ed55ab079007cff0b550895258eb
commit: b197f32bc3d3d9f60977f31ad3e9eadb2123ca60 [6443/6992] mm: thp: introduce multi-size THP sysfs interface
config: s390-randconfig-r006-20230501 (https://download.01.org/0day-ci/archive/20231211/202312111916.YbsHxKPq-lkp@intel.com/config)
compiler: s390-linux-gcc (GCC) 13.2.0
reproduce (this is a W=1 build): (https://download.01.org/0day-ci/archive/20231211/202312111916.YbsHxKPq-lkp@intel.com/reproduce)

If you fix the issue in a separate patch/commit (i.e. not just a new version of
the same patch/commit), kindly add following tags
| Reported-by: kernel test robot <lkp@intel.com>
| Closes: https://lore.kernel.org/oe-kbuild-all/202312111916.YbsHxKPq-lkp@intel.com/

All warnings (new ones prefixed by >>):

   In file included from include/linux/spinlock.h:89,
                    from include/linux/mmzone.h:8,
                    from include/linux/gfp.h:7,
                    from include/linux/mm.h:7,
                    from mm/huge_memory.c:8:
>> mm/huge_memory.c:80:24: warning: 'huge_anon_orders_lock' defined but not used [-Wunused-variable]
      80 | static DEFINE_SPINLOCK(huge_anon_orders_lock);
         |                        ^~~~~~~~~~~~~~~~~~~~~
   include/linux/spinlock_types.h:43:44: note: in definition of macro 'DEFINE_SPINLOCK'
      43 | #define DEFINE_SPINLOCK(x)      spinlock_t x = __SPIN_LOCK_UNLOCKED(x)
         |                                            ^


vim +/huge_anon_orders_lock +80 mm/huge_memory.c

    48	
    49	/*
    50	 * By default, transparent hugepage support is disabled in order to avoid
    51	 * risking an increased memory footprint for applications that are not
    52	 * guaranteed to benefit from it. When transparent hugepage support is
    53	 * enabled, it is for all mappings, and khugepaged scans all mappings.
    54	 * Defrag is invoked by khugepaged hugepage allocations and by page faults
    55	 * for all hugepage allocations.
    56	 */
    57	unsigned long transparent_hugepage_flags __read_mostly =
    58	#ifdef CONFIG_TRANSPARENT_HUGEPAGE_ALWAYS
    59		(1<<TRANSPARENT_HUGEPAGE_FLAG)|
    60	#endif
    61	#ifdef CONFIG_TRANSPARENT_HUGEPAGE_MADVISE
    62		(1<<TRANSPARENT_HUGEPAGE_REQ_MADV_FLAG)|
    63	#endif
    64		(1<<TRANSPARENT_HUGEPAGE_DEFRAG_REQ_MADV_FLAG)|
    65		(1<<TRANSPARENT_HUGEPAGE_DEFRAG_KHUGEPAGED_FLAG)|
    66		(1<<TRANSPARENT_HUGEPAGE_USE_ZERO_PAGE_FLAG);
    67	
    68	static struct shrinker *deferred_split_shrinker;
    69	static unsigned long deferred_split_count(struct shrinker *shrink,
    70						  struct shrink_control *sc);
    71	static unsigned long deferred_split_scan(struct shrinker *shrink,
    72						 struct shrink_control *sc);
    73	
    74	static atomic_t huge_zero_refcount;
    75	struct page *huge_zero_page __read_mostly;
    76	unsigned long huge_zero_pfn __read_mostly = ~0UL;
    77	unsigned long huge_anon_orders_always __read_mostly;
    78	unsigned long huge_anon_orders_madvise __read_mostly;
    79	unsigned long huge_anon_orders_inherit __read_mostly;
  > 80	static DEFINE_SPINLOCK(huge_anon_orders_lock);
    81	

-- 
0-DAY CI Kernel Test Service
https://github.com/intel/lkp-tests/wiki


